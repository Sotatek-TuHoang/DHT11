[1/11] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D E:\Phase2_beta\build\bootloader\esp-idf\esptool_py && C:\Espressif\python_env\idf5.1_py3.11_env\Scripts\python.exe C:/Espressif/frameworks/esp-idf-v5.1/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 E:/Phase2_beta/build/bootloader/bootloader.bin"
Bootloader binary size 0x6810 bytes. 0x7f0 bytes (7%) free.
[2/9] Building C object esp-idf/sht3x_sensor/CMakeFiles/__idf_sht3x_sensor.dir/sht3x_sensor.c.obj
[3/9] Linking C static library esp-idf\sht3x_sensor\libsht3x_sensor.a
[4/9] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/bee_main.c.obj
[5/9] Linking C static library esp-idf\main\libmain.a
[6/9] Generating ld/sections.ld
[7/9] Linking CXX executable bee_main.elf
[8/9] Generating binary image from built executable
esptool.py v4.6.2
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated E:/Phase2_beta/build/bee_main.bin
[9/9] cmd.exe /C "cd /D E:\Phase2_beta\build\esp-idf\esptool_py && C:\Espressif\python_env\idf5.1_py3.11_env\Scripts\python.exe C:/Espressif/frameworks/esp-idf-v5.1/components/partition_table/check_sizes.py --offset 0x8000 partition --type app E:/Phase2_beta/build/partition_table/partition-table.bin E:/Phase2_beta/build/bee_main.bin"
bee_main.bin binary size 0x2fd20 bytes. Smallest app partition is 0x100000 bytes. 0xd02e0 bytes (81%) free.
