[1/9] Building C object esp-idf/bee_mqtt/CMakeFiles/__idf_bee_mqtt.dir/bee_mqtt.c.obj
[2/9] Linking C static library esp-idf\bee_mqtt\libbee_mqtt.a
[3/9] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D "E:\Phase2 beta\build\bootloader\esp-idf\esptool_py" && C:\Espressif\python_env\idf5.1_py3.11_env\Scripts\python.exe C:/Espressif/frameworks/esp-idf-v5.1/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 "E:/Phase2 beta/build/bootloader/bootloader.bin""
Bootloader binary size 0x6810 bytes. 0x7f0 bytes (7%) free.
[4/7] Generating ld/sections.ld
[5/7] Linking CXX executable bee_main.elf
[6/7] Generating binary image from built executable
esptool.py v4.6.2
Creating esp32 image...
Merged 25 ELF sections
Successfully created esp32 image.
Generated E:/Phase2 beta/build/bee_main.bin
[7/7] cmd.exe /C "cd /D "E:\Phase2 beta\build\esp-idf\esptool_py" && C:\Espressif\python_env\idf5.1_py3.11_env\Scripts\python.exe C:/Espressif/frameworks/esp-idf-v5.1/components/partition_table/check_sizes.py --offset 0x8000 partition --type app "E:/Phase2 beta/build/partition_table/partition-table.bin" "E:/Phase2 beta/build/bee_main.bin""
bee_main.bin binary size 0xfd0b0 bytes. Smallest app partition is 0x100000 bytes. 0x2f50 bytes (1%) free.
Warning: The smallest app partition is nearly full (1% free space left)!
